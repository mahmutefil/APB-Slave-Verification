`define DRIV_IF vif.DRIVER.driver_cb

class transaction;

	randc bit write_sel;
	randc bit[7:0] addr;
	randc bit[31:0] wdata;
         bit[31:0] rdata;
	
  
  //constraint c1 {addr > 0; addr < 27;};
  //constraint c2 {wdata > 0; wdata < 200;};
  

  covergroup cg_apb;
    coverpoint addr;
	coverpoint write_sel;
	cross_paddrXpwdata: cross addr, write_sel;
  endgroup
  /* ///////////NOT//////////
  systemverilog assertions sva
  reset'in düşen kenarından itibaren (foreach ile)addr[i] & write_sel -> [1:$] addr[i] & ~write_sel

  cover(my_assertion) */
	
  
  
  function new();
	cg_apb = new();
  endfunction
  
  
  function void display(string name);
    $display("-------------------------");
    $display("- %s ",name);
    $display("-------------------------");
    $display("t = %0t , PADDR = %0h, PWDATA = %0h, write_sel = %d, PRDATA = %0h", $time, addr, wdata, write_sel, rdata);
  endfunction
  
  endclass


/*
module covg;

  covergroup cg_apb with function sample(transaction trans);
    coverpoint trans.wdata {
      bins a[16] = {[0:$]};
    }
	coverpoint trans.wdata {
      bins b[16] = {[0:$]};
    }
	cross_paddrXpwdata: cross trans.wdata, trans.wdata;
  endgroup
  

	cg_apb cg_apb_ins;
	transaction trans;


	initial begin 
		cg_apb_ins = new();
		trans      = new();
		
		forever begin //@(posedge vif.DRIVER.clk);
		cg_apb_ins.sample(trans);
		$display("Coverage of apb=%0.2f %%", cg_apb_ins.get_coverage());
		end
	end




endmodule
*/